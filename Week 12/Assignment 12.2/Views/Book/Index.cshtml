@model Assignment12._2._2.Models.IndexViewModel

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@* step 8 - create book index page*@
<h3>The Harry Potter Collection</h3>
<table class="table table-striped">
    <thead>
        <tr>
            <th>
                @* displays heading for column id *@
                @Html.DisplayNameFor(model=>model.Books[0].Id)
            </th>
            <th>
                @* displays heading for column name *@
                @Html.DisplayNameFor(model=>model.Books[0].Name)
            </th>
            <th>
                @* displays heading for column name *@
                @Html.DisplayNameFor(model=>model.Books[0].Author)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Books)
        {
            <tr>
                <td>@Html.DisplayFor(modelitem=>item.Id)</td>
                <td>@Html.DisplayFor(modelitem=>item.Name)</td>
                <td>@Html.DisplayFor(modelitem=>item.Author)</td>
                <td>
                    @* asp-action points to method we want to happen when link is clicked, when going to Details method asp-route-id tells which specific item to go to*@
                    <a asp-action="Details"asp-route-id="@item.Id">Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@*  DisplayNameFor only shows title, DisplayFor actually pulls the object details*@
